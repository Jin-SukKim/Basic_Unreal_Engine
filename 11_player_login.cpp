/*
    플레리어의 입장

    플레이어가 입장하면 게임 모드는 플레이어에게 폰을 배정해준다.
    그런데 게임 모드는 플레이어가 입장할 때 플레이어 컨트롤러(PlayerController)란
    특별한 액터도 함께 배정한다.

    플레이어 컨트롤러와 폰의 차이

    1. 플레이어 컨트롤러 :
        게임 세계에서 현실 세계의 플레이어를 대변하는 무형의 액터다.
        
        폰을 조종하는 역할을 맡고 플레이어가 입장할 때 배정되며,
        배정된 컨트롤러는 변경할 수 없다.

    2. 폰 :
        폰은 플레이어 컨트롤러에게 조종당하는 액터다.
        
        컨트롤러는 눈에 보이지 않지만 폰은 게임 세계에서 실제로
        보여지고 레벨과 물리적인 충돌을 하며 배치된 액터와 상호작용한다.

        플레이어는 플레이어 컨트롤러를 통해 현재 조종하는 폰을 버리고 다른 폰으로
        옮겨가 조종할 수 있다.

    UE에서 플레이어가 컨트롤러를 통해 폰을 조종하는 행위를 빙의(Posses)라고 한다.

    플레이어가 입장하면 게임 모드에 의해 관련된 액터들이 순서대로 생성되고 게임플레이를 위한 설정이 갖춰진다.

    1. 플레이어 컨트롤러의 생성
    2. 플레이어 폰의 생성
    3. 플레이어 컨트롤러가 플레이어 폰을 빙의
    4. 게임의 시작

    플레이어가 게임에 입장하는 것을 로그인(Login)이라 하며, 이 과정에서 플레이어에게
    할당된 플레이어 컨트롤러가 생성된다.

    로그인을 완료하면 게임 모드의 PostLogin 이벤트 함수가 호출되는데,
    이 함수 내부에서는 플레이어가 조종할 폰을 생성하고 컨트롤러가 폰에 빙의하는 작업이 이루어진다.

    폰과 플레이어 컨트롤러가 생성되는 시점은 각 액터의 PosInitializeComponents 함수로 파악할 수 잇으며,
    빙의를 진행하는 시점은 플레이어 컨트롤러의 OnPossess, 폰의 PossessedBy 함수로 파악할 수 있다.

    지금 게임 모드에서는 폰을 생성한 뒤 폰을 세팅한 것이 아니라 폰의 클래스 정보를 가져와 지정했다.
    이런 방식은 멀티 플레이 게임에 적합한데 플레이어가 입장하면 지정된 정보를 기반으로 폰을 생성하면 되기 때문이다.

    하지만 예외적인 설정도 가능하다.
    폰의 Auto Possess Player 속성을 사용하면 새롭게 폰을 생성하지 않고
    레벨에 이미 배치돼있는 폰에 플레이어 컨트롤러가 빙의할 수 있다.

    폰으로 사용할 액터를 배치하고 디테일 윈도우의 Auto Possess Player 항목을 Player 0으로 설정한다.
    Player0은 로컬 플레이어를 의미하는데 이러면 게임 모드는 ABPawn 액터를 생성하지 않고,
    대신 컨트롤러에게 레벨에 배치된 액터에 빙의하라는 명령을 내린다.

    UE에서 애셋의 클래스 정보는 애셋 경로에 '_C' 접미사를 붙여서 가져올 수 있다.
    ConstructorHelpers의 FClassFinder를 사용하고 특별한 '_C' 경로를사용하면
    블루프린트 애셋의 클래스 정보를가져올 수 있따.
    이러면 블루프린트로 제작된 폰을 기본 폰으로 사용할 수도 있따.
*/
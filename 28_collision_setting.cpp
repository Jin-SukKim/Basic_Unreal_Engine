/*
    콜리전 설정(충돌 설정)

    물리엔진은 중력, 외부와 상호작용, 사실적인 움직임 등에 사용되고
    지정한 영역에 들어왔는지 감지하는 기능을 사용한 기믹(Gimmick) 요소를 제작하는데도 사용가능하다.

    물리 엔진을 활용하려면 콜리전(Collision)이라 불리는 물리적 충돌 영역을 설정하는 방법이 중요하다.

    UE의 콜리전은 세가지 방법으로 제작 가능하다.

    1. StaticMesh Asset : 스태틱메시 애셋에 콜리전 영역을 심는 방법이다.
        스태틱메시를 열면 스태티메시 에디터에 해당 콜리전 영역을 설정하고 확인할 수 있다.
        스탵틱메시에 콜리전을 심으면 스태틱메시 컴포넌트에서 비주얼과 충돌 두 가지 기능을
        설정할 수 있어 관리가 편하다.

    2. 기본 도형(Primitive) 컴포넌트 : 구체, 박스, 캡슐의 기본 도형을 사용해 충돌 영역을 지정한다.
        스태틱메시와 별도로 충돌 영역을 제작하는 데 사용한다.
        스켈레탈 메시를 움직일 때 주로 사용한다.

    3. Physics Asset : 캐릭터의 각부위에 기본 도형으로 충돌 영역을 설정하고 이를 연결해 캐릭터의 물리를 설정한다.
        일반적으로 캐릭터의 이동은 캡슐 컴포넌트를 사용해 처리한다.
        하지만 특정 상황에서 캐릭터의 각 관절이 흐느적거리는 헝겊 인형(RagDoll) 효과를
        구현할 때 이 Physics Asset을 사용한다.
        피직스 애셋은 스켈레탈 메시에만 사용할 수 있다.

    충돌 영역 설정 후 이를 활용할 방법을 지정한다.
    스태틱메시 애셋에는 BlockAll이라는 기본 설정이 있어 캐릭터의 이동을 방해하는 레벨 콘텐츠 제작이 가능하다.

    하지만 플레이어가 레벨과 상호작용하면서 문제를 풀어나가는 콘텐츠 제작을 위해 물리 엔진의 세부적인 설정을 학습한다.
    물리 설정은 크게 세 가지로 구분된다.

    1. Collision Channel과 기본 반응
    2. Collision Channel의 용도
    3. 다른 Collision Channel과의 반응

    충돌체에 반드시 하나의 콜리전 채널을 설정해야 한다.

    UE의 기본 콜리전 채널

    1. WorldStatic : 움직이지 않는 정적인 배경 액터에 사용하는 콜리전 채널
        주로 스태틱메시 액터에 있는 스태틱메시 컴포넌트에 사용한다.

    2. WorldDynamic : 움직이는 액터에 사용하는 콜리전 채널
        블루프린트에 속한 스태틱메시 컴포넌트에 사용한다.

    3. Pawn : 플레이어가 조종하는 물체에 주로 사용하는 콜리전 채널
        캐릭터의 충돌을 담당하는 캡슐 컴포넌트에 설정된다.

    4. Visibility : 배경 물체가 시각적으로 보이는지 탐지하는 데 사용하는 채널
        탐지에서 폰은 제외된다.
        마우스로 물체르 선택하는 피킹(Picking) 기능을 구현할 때 사용한다.

    5. Camera : 카메라 설정을 위해 카메라와 목표물 간에 장애물이 있는지 탐지하는 데 사용하는 채널
        3인칭 카메라에서 캐릭터 조작 시 장애물이 시야를 가리면 카메라를 줌인하는 기능 등

    6. PhysicsBody : 물리 시뮬레이션으로 움직이는 컴포넌트에 설정하는 채널

    7. Vehicle : 자동차 등 탈것을 구성하는 채널
    
    8. Destructible : 물체가 파괴되는 것을 구현할 때 사용하는 채널

    UE는 액터의 종류에 따라 기본 채널 중 하나를 충돌체로 사용하는 컴포넌트에 부여하고 있다.

    캐릭터의 루트 컴포넌트인 캡슐 컴포넌트에는 Pawn이라는 콜리전 채널이 설정된다.
    UE에서 캐릭터의 캡슐 컴포넌트의 콜리전 프리셋 메뉴를 펼치고 Object Type을 보면 Pawn 콜리전 채널 설정이 되어있다.

    콜리전 프리셋의 값 Pawn과 Object Tupe의 값 Pawn은 서로 다른 설정 값이라 혼동하지 않게 주의한다.
    확인해야할 콜리전 채널은 Object Type의 값 Pawn이다.
    해당 컴포넌트에서 물리 기능을 어떻게 사용할지는 Collision Enabled 항목에서 설정한다.

    설정할 수 있는 값

    1. Query : 두 물체의 충돌 영역이 서로 겹치는지 테스트하는 설정
        충돌 영역의 겹침을 감지하는 것은 UE에서 Overlap이라 불리며,
        충돌 영역이 겹치면 관련 컴포넌트에 BeginOverlap 이벤트가 발생한다.
        지정한 영역에 물체가 충돌하는지 탐지하는 Raycast나 Sweep 기능도 Query에 속한다.

    2. Physics : 물리적인 시뮬레이션을 사용할 때 설정

    3. Query and Physics : 위의 두 기능을 모두 사용하는 설정
        단 물리엔진의 계산량이 많아진다.

    Generates Overlap Events 옵션을 체크해 Query 기능을 사용하는 관련 이벤트가 발생한다.

    해당 컴포넌트에 설정된 콜리전 채널이 상대방 컴포넌트의 콜리전 채널과 어떻게 반응할지 지정해야된다.
    다른 콜리전 채널과의 반응에 무시, 겹침, 블록 세가지 값을 지정할 수 있따.

    1. 무시(Ignore) : 콜리전이 있어도 아무 충돌이 일어나지 않느다.

    2. 겹침(Overlap) : 무시와 동일하게 물체가 뚫고 지나갈 수 있지만 이벤트를 발생시킨다.

    3. 블룩(Block) : 물체가 뚫고 지나가지 못하도록 막는다. 

    겹침 반응에는 BeginOverlap 이벤트가 발생하고 블록 반응에는 Hit 이벤트가 발생한다.
    UE에서 기본으로 제공하는 콜리전 채널만 사용해도 되지만
    게임 기획을 고도화하면 그에 맞게 새로운 콜리전 채널을 추가해야 한다.

    edit -> project setting -> collision에서 새로운 콜리전 채널 생성이 가능하다.

    콜리전 채널은 다시 오브젝트 채널과 트레이스 채널로 나뉜다.

    1. 오브젝트 채널 : 콜리전 영역에 지정하는 콜리전 채널
        - WorldStatic, WorldDynamic, Pawn, PohysicsBody, Vegicle, Destructible

    2. 트레이스 채널 : 어떤 행동에 설정하는 콜리전 채널
        - Visibility, Camera

    이번엔 캐릭터의 캡슐 컴포넌트의 콜리전 영역에 지정할 새로운 채널을 생성한다.
    오브젝트 채널을 새로 만들어주고 Dialog에서 ABCharacter라는 콜리전 채널을 입력하고
    Default Response 기본값인 Block으로 둔다.

    오브젝트 채널을 추가하고 가장먼저 이미 만들어진 다른 콜리전 프리셋과 문제없도록 설정해야된다.
    생성된 콜리전 채널과 다른 콜리전 채널과의 기본 반응은 블록으로 설정해
    블록 기능에 관련된 콜리전 프리셋과는 문제없지만, 블록 반응을 하면 안 되는 다른 콜리전 프리셋들이
    있다보니 이에 맞게 조율해줘야 한다.

    먼저 사용할 프리셋을 생성한다.
    Preset에서 New를 눌러 ABCharacter라는 이름으로 설정하고
    CollisionEnabled는 Collision Enabled(Queue and Physics)와 Object type을 ABCharacter로 설정한다.

    프리셋 추가를 한 뒤 기조 ㄴ콜리전 프리셋들과의 충돌 반응을 조정해준다.
    생성한 콜리전 채널 ABCharacter의 기본 반응은 블록이므로 기존 콜리전 프리셋에서
    블록 반응을 하면 안 되는 설정을 찾아서 변경해준다.

    ex) 콜리전 프리셋 중 Trigger는 플레이어의 진로를 방해하지 않고 영역 안에 들어왔는지를
        감지하도록 UE이 설계해 제공하는 프리셋이다.
        그냥 두면 Trigger 프리셋으로 지정된 컴포넌트는 캐릭터가 지나가지 못하도록 막을것이므로
        이를 방지하기 위해 Trigger 프리셋으로 돌아가 ABCharacter 채널과의 반응을
        기본 값인 블록에서 겹침으로 변경해준다.
    
    이렇게 다른 프리셋들도 바꿔준다.

    OverlayAll : Overlap
    OverlapAllDynamic : Overlap
    IgnoreOnlyPawn : Ignore (폰만 충돌을 무시하도록 설정)
    OverlapOnlyPawn : Overlap (폰에만 겹침 이벤트가 발동하도록 설정)
    Spectator : Ignore (외부 관중과의 충돌을 설정)
    CharacterMesh : Ignore (캐릭터 메시에 사용하는 물리 설정)
    Ragdoll : Ignore (스켈레탈 메시의 피직스 애셋 물리를 가동하기 위한 물리 설정)
    Trigger : Overlap (지정한 영역에 물체가 들어오면 이벤트가 발동하는 용도로 사용)
    UI : Overlap (UI 요소에 사용하는 설정)

    모든 프리셋과의 반응 설정을 완료하면 캡슐 컴포넌트가 해당 프리셋을 사용하도록 코드로 기본값을 지정한다.

    ABCharacter.cpp
    ...
    GetCapsuleComponent()->SetCollisionProfileName(TEXT("ABChacracter"));
    ....

*/